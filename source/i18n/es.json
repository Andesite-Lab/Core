{
  "error": {
    "core": {
      "invalid_environment": "Entorno inválido",
      "validation": {
        "array": {
          "contains": "Se esperaba que la matriz contuviera al menos un valor coincidente",
          "is_array": "Se esperaba que el valor fuera una matriz pero obtuvo {{type}}",
          "max_contains": "Se esperaba que la matriz no contuviera más de {{max}} valores coincidentes",
          "max_items": "Se esperaba que la longitud de la matriz fuera menor o igual a {{max}} pero obtuvo {{length}}",
          "min_contains": "Se esperaba que la matriz contuviera al menos {{min}} valores coincidentes",
          "min_items": "Se esperaba que la longitud de la matriz fuera mayor o igual a {{min}} pero obtuvo {{length}}",
          "unique_items": "Se esperaba que los elementos de la matriz fueran únicos"
        },
        "async_iterator": {
          "is_async_iterator": "Se esperaba que el valor fuera un iterador asincrónico pero obtuvo {{type}}"
        },
        "bigint": {
          "exclusive_maximum": "Se esperaba que bigint fuera menor que {{maximum}} pero obtuvo {{value}}",
          "exclusive_minimum": "Se esperaba que bigint fuera mayor que {{minimum}} pero obtuvo {{value}}",
          "is_bigint": "Se esperaba que el valor fuera un bigint pero obtuvo {{type}}",
          "maximum": "Se esperaba que bigint fuera menor o igual a {{maximum}} pero obtuvo {{value}}",
          "minimum": "Se esperaba que bigint fuera mayor o igual a {{minimum}} pero obtuvo {{value}}",
          "multiple_of": "Se esperaba que bigint fuera un múltiplo de {{multiple}} pero obtuvo {{value}}"
        },
        "boolean": {
          "is_boolean": "Se esperaba que el valor fuera un booleano pero obtuvo {{type}}"
        },
        "date": {
          "exclusive_maximum_timestamp": "Se esperaba que la marca de tiempo de la fecha fuera menor que {{maximum}} pero obtuvo {{value}}",
          "exclusive_minimum_timestamp": "Se esperaba que la marca de tiempo de la fecha fuera mayor que {{minimum}} pero obtuvo {{value}}",
          "is_date": "Se esperaba que el valor fuera una fecha pero obtuvo {{type}}",
          "maximum_timestamp": "Se esperaba que la marca de tiempo de la fecha fuera menor o igual a {{maximum}} pero obtuvo {{value}}",
          "minimum_timestamp": "Se esperaba que la marca de tiempo de la fecha fuera mayor o igual a {{minimum}} pero obtuvo {{value}}",
          "multiple_of_timestamp": "Se esperaba que la marca de tiempo de la fecha fuera un múltiplo de {{multiple}} pero obtuvo {{value}}"
        },
        "default": "Tipo de error desconocido",
        "format": {
          "already_exists": "El formato '{{format}}' ya existe",
          "does_not_exist": "El formato '{{format}}' no existe"
        },
        "function": {
          "is_function": "Se esperaba que el valor fuera una función pero obtuvo {{type}}"
        },
        "integer": {
          "exclusive_maximum": "Se esperaba que el entero fuera menor que {{maximum}} pero obtuvo {{value}}",
          "exclusive_minimum": "Se esperaba que el entero fuera mayor que {{minimum}} pero obtuvo {{value}}",
          "is_integer": "Se esperaba que el valor fuera un entero pero obtuvo {{type}}",
          "maximum": "Se esperaba que el entero fuera menor o igual a {{maximum}} pero obtuvo {{value}}",
          "minimum": "Se esperaba que el entero fuera mayor o igual a {{minimum}} pero obtuvo {{value}}",
          "multiple_of": "Se esperaba que el entero fuera un múltiplo de {{multiple}} pero obtuvo {{value}}"
        },
        "intersect": {
          "is_intersect": "Se esperaba que todos los valores coincidieran",
          "unevaluated_properties": "Se encontraron propiedades no evaluadas: {{props}}"
        },
        "iterator": {
          "is_iterator": "Se esperaba que el valor fuera un iterador pero obtuvo {{type}}"
        },
        "kind": {
          "is_kind": "Se esperaba que el valor fuera de tipo {{kind}} pero obtuvo {{type}}"
        },
        "literal": {
          "is_literal": "Se esperaba que el valor fuera un literal pero obtuvo {{type}}"
        },
        "never": {
          "is_never": "Se esperaba que el valor fuera nunca pero obtuvo {{type}}"
        },
        "not": {
          "not_match": "El valor no debe coincidir"
        },
        "null": {
          "is_null": "Se esperaba que el valor fuera nulo pero obtuvo {{type}}"
        },
        "number": {
          "exclusive_maximum": "Se esperaba que el número fuera menor que {{maximum}} pero obtuvo {{value}}",
          "exclusive_minimum": "Se esperaba que el número fuera mayor que {{minimum}} pero obtuvo {{value}}",
          "is_number": "Se esperaba que el valor fuera un número pero obtuvo {{type}}",
          "maximum": "Se esperaba que el número fuera menor o igual a {{maximum}} pero obtuvo {{value}}",
          "minimum": "Se esperaba que el número fuera mayor o igual a {{minimum}} pero obtuvo {{value}}",
          "multiple_of": "Se esperaba que el número fuera un múltiplo de {{multiple}} pero obtuvo {{value}}"
        },
        "object": {
          "additional_properties": "Se encontraron propiedades adicionales: {{props}}",
          "is_object": "Se esperaba que el valor fuera un objeto pero obtuvo {{type}}",
          "max_properties": "Se esperaba que el objeto tuviera como máximo {{maximum}} propiedades pero obtuvo {{value}}",
          "min_properties": "Se esperaba que el objeto tuviera al menos {{minimum}} propiedades pero obtuvo {{value}}",
          "required_property": "Propiedad requerida faltante: {{key}}"
        },
        "promise": {
          "is_promise": "Se esperaba que el valor fuera una promesa pero obtuvo {{type}}"
        },
        "regexp": {
          "not_match": "Se esperaba que la cadena coincidiera con la expresión regular {{pattern}} pero obtuvo {{value}}"
        },
        "string": {
          "format": "Se esperaba que la cadena estuviera en formato {{format}} pero obtuvo {{value}}",
          "format_unknown": "Formato de cadena desconocido {{format}}",
          "is_string": "Se esperaba que el valor fuera una cadena de texto pero obtuvo {{type}}",
          "max_length": "Se esperaba que la longitud de la cadena fuera menor o igual a {{maximum}} pero obtuvo {{value}}",
          "min_length": "Se esperaba que la longitud de la cadena fuera mayor o igual a {{minimum}} pero obtuvo {{value}}",
          "pattern": "Se esperaba que la cadena coincidiera con el patrón {{pattern}} pero obtuvo {{value}}"
        },
        "symbol": {
          "is_symbol": "Se esperaba que el valor fuera un símbolo pero obtuvo {{type}}"
        },
        "tuple": {
          "is_tuple": "Se esperaba que el valor fuera una tupla pero obtuvo {{type}}",
          "length": "Se esperaba que la tupla tuviera una longitud de {{length}} pero obtuvo {{value}}"
        },
        "uint8array": {
          "is_uint8array": "Se esperaba que el valor fuera un Uint8Array pero obtuvo {{type}}",
          "max_byte_length": "Se esperaba que Uint8Array tuviera una longitud de bytes menor o igual a {{maximum}} pero obtuvo {{value}}",
          "min_byte_length": "Se esperaba que Uint8Array tuviera una longitud de bytes mayor o igual a {{minimum}} pero obtuvo {{value}}"
        },
        "undefined": {
          "is_undefined": "Se esperaba que el valor fuera indefinido pero obtuvo {{type}}"
        },
        "union": {
          "is_union": "Se esperaba que el valor fuera uno de {{types}} pero obtuvo {{type}}"
        },
        "void": {
          "is_void": "Se esperaba que el valor fuera vacío pero obtuvo {{type}}"
        }
      }
    }
  }
}